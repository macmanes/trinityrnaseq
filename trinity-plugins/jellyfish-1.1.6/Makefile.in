# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = bin/jellyfish$(EXEEXT)
check_PROGRAMS = bin/generate_sequence$(EXEEXT) \
	bin/test_double_fifo_input$(EXEEXT) \
	bin/test_read_parser$(EXEEXT) bin/test_all$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(library_include_HEADERS) \
	$(noinst_HEADERS) $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(srcdir)/gtest.mk \
	$(srcdir)/jellyfish-1.1.pc.in $(top_srcdir)/configure \
	$(top_srcdir)/tests/compat.sh.in config.guess config.sub \
	depcomp install-sh ltmain.sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = tests/compat.sh jellyfish-1.1.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(library_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libgtest_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libgtest_la_OBJECTS =  \
	unit_tests/gtest/src/libgtest_la-gtest-all.lo
libgtest_la_OBJECTS = $(am_libgtest_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libgtest_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libgtest_la_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libgtest_main_la_DEPENDENCIES = libgtest.la
am_libgtest_main_la_OBJECTS =  \
	unit_tests/gtest/src/libgtest_main_la-gtest_main.lo
libgtest_main_la_OBJECTS = $(am_libgtest_main_la_OBJECTS)
libgtest_main_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libgtest_main_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
libjellyfish_la_LIBADD =
am_libjellyfish_la_OBJECTS =  \
	jellyfish/libjellyfish_la-square_binary_matrix.lo \
	jellyfish/libjellyfish_la-err.lo \
	jellyfish/libjellyfish_la-misc.lo \
	jellyfish/libjellyfish_la-storage.lo \
	jellyfish/libjellyfish_la-thread_exec.lo \
	jellyfish/libjellyfish_la-time.lo \
	jellyfish/libjellyfish_la-file_parser.lo \
	jellyfish/libjellyfish_la-read_parser.lo \
	jellyfish/libjellyfish_la-parse_read.lo \
	jellyfish/libjellyfish_la-half.lo \
	jellyfish/libjellyfish_la-mapped_file.lo \
	jellyfish/libjellyfish_la-parse_dna.lo \
	jellyfish/libjellyfish_la-parse_quake.lo \
	jellyfish/libjellyfish_la-parse_qual_dna.lo \
	jellyfish/libjellyfish_la-sequence_parser.lo \
	jellyfish/libjellyfish_la-seq_qual_parser.lo \
	jellyfish/libjellyfish_la-backtrace.lo \
	jellyfish/libjellyfish_la-floats.lo \
	jellyfish/libjellyfish_la-dbg.lo \
	jellyfish/libjellyfish_la-allocators_mmap.lo \
	jellyfish/libjellyfish_la-dna_codes.lo
libjellyfish_la_OBJECTS = $(am_libjellyfish_la_OBJECTS)
libjellyfish_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libjellyfish_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_bin_generate_sequence_OBJECTS =  \
	jellyfish/generate_sequence.$(OBJEXT) jellyfish/misc.$(OBJEXT) \
	jellyfish/mersenne.$(OBJEXT) \
	jellyfish/square_binary_matrix.$(OBJEXT) \
	jellyfish/backtrace.$(OBJEXT) jellyfish/dbg.$(OBJEXT) \
	jellyfish/time.$(OBJEXT)
bin_generate_sequence_OBJECTS = $(am_bin_generate_sequence_OBJECTS)
bin_generate_sequence_LDADD = $(LDADD)
am_bin_jellyfish_OBJECTS = jellyfish/jellyfish.$(OBJEXT) \
	jellyfish/stats_main.$(OBJEXT) jellyfish/hash_merge.$(OBJEXT) \
	jellyfish/storage.$(OBJEXT) jellyfish/misc.$(OBJEXT) \
	jellyfish/err.$(OBJEXT) jellyfish/mer_counter.$(OBJEXT) \
	jellyfish/histo_main.$(OBJEXT) jellyfish/dump_main.$(OBJEXT) \
	jellyfish/time.$(OBJEXT) jellyfish/thread_exec.$(OBJEXT) \
	jellyfish/query_main.$(OBJEXT) \
	jellyfish/square_binary_matrix.$(OBJEXT) \
	jellyfish/dump_fastq_main.$(OBJEXT) \
	jellyfish/histo_fastq_main.$(OBJEXT) jellyfish/cite.$(OBJEXT) \
	jellyfish/parse_dna.$(OBJEXT) jellyfish/file_parser.$(OBJEXT) \
	jellyfish/parse_quake.$(OBJEXT) \
	jellyfish/parse_qual_dna.$(OBJEXT) \
	jellyfish/sequence_parser.$(OBJEXT) \
	jellyfish/seq_qual_parser.$(OBJEXT) jellyfish/half.$(OBJEXT) \
	jellyfish/hash_fastq_merge.$(OBJEXT) jellyfish/dbg.$(OBJEXT) \
	jellyfish/mapped_file.$(OBJEXT) jellyfish/backtrace.$(OBJEXT) \
	jellyfish/floats.$(OBJEXT) jellyfish/allocators_mmap.$(OBJEXT) \
	jellyfish/yaggo.$(OBJEXT) jellyfish/dna_codes.$(OBJEXT)
bin_jellyfish_OBJECTS = $(am_bin_jellyfish_OBJECTS)
bin_jellyfish_LDADD = $(LDADD)
am_bin_test_all_OBJECTS =  \
	unit_tests/bin_test_all-test_offsets_key_value.$(OBJEXT) \
	unit_tests/bin_test_all-test_simple_circular_buffer.$(OBJEXT) \
	unit_tests/bin_test_all-test_square_binary_matrix.$(OBJEXT) \
	jellyfish/bin_test_all-square_binary_matrix.$(OBJEXT)
bin_test_all_OBJECTS = $(am_bin_test_all_OBJECTS)
bin_test_all_DEPENDENCIES = libgtest_main.la
bin_test_all_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bin_test_all_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_bin_test_double_fifo_input_OBJECTS =  \
	jellyfish/test_double_fifo_input.$(OBJEXT) \
	jellyfish/parse_dna.$(OBJEXT) jellyfish/file_parser.$(OBJEXT) \
	jellyfish/sequence_parser.$(OBJEXT) \
	jellyfish/backtrace.$(OBJEXT) jellyfish/thread_exec.$(OBJEXT) \
	jellyfish/dbg.$(OBJEXT) jellyfish/time.$(OBJEXT) \
	jellyfish/allocators_mmap.$(OBJEXT) \
	jellyfish/dna_codes.$(OBJEXT)
bin_test_double_fifo_input_OBJECTS =  \
	$(am_bin_test_double_fifo_input_OBJECTS)
bin_test_double_fifo_input_LDADD = $(LDADD)
am_bin_test_read_parser_OBJECTS =  \
	jellyfish/test_read_parser.$(OBJEXT) \
	jellyfish/file_parser.$(OBJEXT) \
	jellyfish/read_parser.$(OBJEXT) jellyfish/parse_read.$(OBJEXT) \
	jellyfish/dbg.$(OBJEXT) jellyfish/backtrace.$(OBJEXT) \
	jellyfish/time.$(OBJEXT)
bin_test_read_parser_OBJECTS = $(am_bin_test_read_parser_OBJECTS)
bin_test_read_parser_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libgtest_la_SOURCES) $(libgtest_main_la_SOURCES) \
	$(libjellyfish_la_SOURCES) $(bin_generate_sequence_SOURCES) \
	$(bin_jellyfish_SOURCES) $(bin_test_all_SOURCES) \
	$(bin_test_double_fifo_input_SOURCES) \
	$(bin_test_read_parser_SOURCES)
DIST_SOURCES = $(libgtest_la_SOURCES) $(libgtest_main_la_SOURCES) \
	$(libjellyfish_la_SOURCES) $(bin_generate_sequence_SOURCES) \
	$(bin_jellyfish_SOURCES) $(bin_test_all_SOURCES) \
	$(bin_test_double_fifo_input_SOURCES) \
	$(bin_test_read_parser_SOURCES)
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man1_MANS)
DATA = $(pkgconfig_DATA)
HEADERS = $(library_include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
# then this fails; a conservative approach.  Of course do not redirect
# stdout here, just stderr.
am__tty_colors = \
red=; grn=; lgn=; blu=; std=; \
test "X$(AM_COLOR_TESTS)" != Xno \
&& test "X$$TERM" != Xdumb \
&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  grn='[0;32m'; \
  lgn='[1;32m'; \
  blu='[1;34m'; \
  std='[m'; \
}
# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
# Put stdin (possibly several lines separated by ".  ") in a box.
am__text_box = $(AWK) '{				\
  n = split($$0, lines, "\\.  "); max = 0;		\
  for (i = 1; i <= n; ++i)				\
    if (max < length(lines[i]))				\
      max = length(lines[i]);				\
  for (i = 0; i < max; ++i) line = line "=";		\
  print line;						\
  for (i = 1; i <= n; ++i) if (lines[i]) print lines[i];\
  print line;						\
}'
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL).  This contradicts POSIX.  Work around the problem
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log, and passes
# TESTS_ENVIRONMENT.  Save and restore TERM around use of
# TESTS_ENVIRONMENT, in case that unsets it.
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
srcdir=$(srcdir); export srcdir;			\
rm -f $@-t;						\
trap 'st=$$?; rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st' \
  1 2 13 15;						\
am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
$(TESTS_ENVIRONMENT)
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check check-html recheck recheck-html
TEST_SUITE_LOG = test-suite.log
TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.sh.log=.log)
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MD5 = @MD5@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = doc/jellyfish.pdf doc/jellyfish.man README LICENSE \
	HalfLICENSE jellyfish/cite_cmdline.hpp \
	jellyfish/query_cmdline.hpp jellyfish/hash_merge_cmdline.hpp \
	jellyfish/histo_main_cmdline.hpp \
	jellyfish/stats_main_cmdline.hpp \
	jellyfish/histo_fastq_main_cmdline.hpp \
	jellyfish/dump_fastq_main_cmdline.hpp \
	jellyfish/count_main_cmdline.hpp \
	jellyfish/hash_fastq_merge_cmdline.hpp \
	jellyfish/dump_main_cmdline.hpp \
	jellyfish/double_fifo_input.hpp \
	jellyfish/simple_growing_array.hpp jellyfish/backtrace.hpp \
	jellyfish/noop_dumper.hpp jellyfish/yaggo.hpp \
	jellyfish/fstream_default.hpp jellyfish/randomc.h \
	jellyfish/generate_sequence_cmdline.hpp $(TESTS) $(GTEST_SRC)
man1_MANS = doc/jellyfish.man
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = jellyfish-1.1.pc
AM_LDFLAGS = -lpthread
AM_CPPFLAGS = -Wall -Werror -Wnon-virtual-dtor -I$(top_srcdir)
AM_CXXFLAGS = -g -O3
lib_LTLIBRARIES = libjellyfish.la

########################################
# Build Jellyfish the exec
########################################
bin_jellyfish_SOURCES = jellyfish/jellyfish.cc jellyfish/stats_main.cc	\
                        jellyfish/hash_merge.cc jellyfish/storage.cc	\
                        jellyfish/misc.cc jellyfish/err.cc		\
                        jellyfish/mer_counter.cc			\
                        jellyfish/histo_main.cc jellyfish/dump_main.cc	\
                        jellyfish/time.cc jellyfish/thread_exec.cc	\
                        jellyfish/query_main.cc				\
                        jellyfish/square_binary_matrix.cc		\
                        jellyfish/dump_fastq_main.cc			\
                        jellyfish/histo_fastq_main.cc			\
                        jellyfish/cite.cc jellyfish/parse_dna.cc	\
                        jellyfish/file_parser.cc			\
                        jellyfish/parse_quake.cc			\
                        jellyfish/parse_qual_dna.cc			\
                        jellyfish/sequence_parser.cc			\
                        jellyfish/seq_qual_parser.cc			\
                        jellyfish/half.cpp				\
                        jellyfish/hash_fastq_merge.cc jellyfish/dbg.cc	\
                        jellyfish/mapped_file.cc			\
                        jellyfish/backtrace.cc jellyfish/floats.cc	\
                        jellyfish/allocators_mmap.cc			\
                        jellyfish/yaggo.cpp jellyfish/dna_codes.cc

########################################
# Build Jellyfish the shared library
########################################
libjellyfish_la_LDFLAGS = -version-info 2:0:1
libjellyfish_la_SOURCES = jellyfish/square_binary_matrix.cc		\
                          jellyfish/err.cc jellyfish/misc.cc		\
                          jellyfish/storage.cc				\
                          jellyfish/thread_exec.cc jellyfish/time.cc	\
                          jellyfish/file_parser.cc			\
                          jellyfish/read_parser.cc			\
                          jellyfish/parse_read.cc jellyfish/half.cpp	\
                          jellyfish/mapped_file.cc			\
                          jellyfish/parse_dna.cc			\
                          jellyfish/parse_quake.cc			\
                          jellyfish/parse_qual_dna.cc			\
                          jellyfish/sequence_parser.cc			\
                          jellyfish/seq_qual_parser.cc			\
                          jellyfish/backtrace.cc jellyfish/floats.cc	\
                          jellyfish/dbg.cc				\
                          jellyfish/allocators_mmap.cc			\
                          jellyfish/dna_codes.cc

libjellyfish_la_CPPFLAGS = $(AM_CPPFLAGS)
library_includedir = $(includedir)/jellyfish-@PACKAGE_VERSION@/jellyfish
library_include_HEADERS = jellyfish/allocators_malloc.hpp		\
                          jellyfish/allocators_mmap.hpp			\
                          jellyfish/allocators_shm.hpp			\
                          jellyfish/atomic_gcc.hpp			\
                          jellyfish/compacted_dumper.hpp		\
                          jellyfish/compacted_hash.hpp			\
                          jellyfish/concurrent_queues.hpp		\
                          jellyfish/direct_indexing_array.hpp		\
                          jellyfish/direct_sorted_dumper.hpp		\
                          jellyfish/divisor.hpp jellyfish/dumper.hpp	\
                          jellyfish/hash_function.hpp			\
                          jellyfish/hash.hpp jellyfish/heap.hpp		\
                          jellyfish/invertible_hash_array.hpp		\
                          jellyfish/locking_hash_counters.hpp		\
                          jellyfish/locks_pthread.hpp			\
                          jellyfish/mapped_file.hpp			\
                          jellyfish/mer_counting.hpp			\
                          jellyfish/err.hpp jellyfish/misc.hpp		\
                          jellyfish/offsets_key_value.hpp		\
                          jellyfish/reversible_hash_function.hpp	\
                          jellyfish/sorted_dumper.hpp			\
                          jellyfish/square_binary_matrix.hpp		\
                          jellyfish/storage.hpp				\
                          jellyfish/thread_exec.hpp			\
                          jellyfish/time.hpp jellyfish/token_ring.hpp	\
                          jellyfish/raw_dumper.hpp			\
                          jellyfish/capped_integer.hpp			\
                          jellyfish/aligned_values_array.hpp		\
                          jellyfish/fastq_dumper.hpp			\
                          jellyfish/floats.hpp				\
                          jellyfish/circular_buffer.hpp			\
                          jellyfish/counter.hpp				\
                          jellyfish/parse_quake.hpp			\
                          jellyfish/parse_dna.hpp			\
                          jellyfish/parse_qual_dna.hpp			\
                          jellyfish/file_parser.hpp			\
                          jellyfish/sequence_parser.hpp			\
                          jellyfish/seq_qual_parser.hpp			\
                          jellyfish/double_fifo_input.hpp		\
                          jellyfish/read_parser.hpp			\
                          jellyfish/parse_read.hpp			\
                          jellyfish/simple_growing_array.hpp		\
                          jellyfish/toFloat.h jellyfish/eLut.h		\
                          jellyfish/dbg.hpp jellyfish/half.h		\
                          jellyfish/backtrace.hpp			\
                          jellyfish/dna_codes.hpp			\
                          jellyfish/simple_circular_buffer.hpp


########################################
# Build tests
########################################
bin_generate_sequence_SOURCES = jellyfish/generate_sequence.cc		\
                                jellyfish/misc.cc			\
                                jellyfish/mersenne.cpp			\
                                jellyfish/square_binary_matrix.cc	\
                                jellyfish/backtrace.cc			\
                                jellyfish/dbg.cc jellyfish/time.cc

bin_test_double_fifo_input_SOURCES = \
                                     jellyfish/test_double_fifo_input.cc	\
                                     jellyfish/parse_dna.cc			\
                                     jellyfish/file_parser.cc			\
                                     jellyfish/sequence_parser.cc		\
                                     jellyfish/backtrace.cc			\
                                     jellyfish/thread_exec.cc			\
                                     jellyfish/dbg.cc				\
                                     jellyfish/time.cc				\
                                     jellyfish/allocators_mmap.cc		\
                                     jellyfish/dna_codes.cc

bin_test_read_parser_SOURCES = jellyfish/test_read_parser.cc		\
                               jellyfish/file_parser.cc			\
                               jellyfish/read_parser.cc			\
                               jellyfish/parse_read.cc			\
                               jellyfish/dbg.cc jellyfish/backtrace.cc	\
                               jellyfish/time.cc


########################################
# Tests
########################################
TEST_EXTENSIONS = .sh
SH_LOG_COMPILER = /bin/sh
AM_SH_LOG_FLAGS = 

########################################
# Unit tests
########################################
TESTS = tests/generate_sequence.sh tests/serial_hashing.sh \
	tests/parallel_hashing.sh tests/serial_direct_indexing.sh \
	tests/parallel_direct_indexing.sh tests/raw_hash.sh \
	tests/generate_fastq_sequence.sh \
	tests/parallel_fastq_hashing.sh tests/multi_file.sh \
	tests/multi_file_fastq.sh tests/from_stream.sh \
	tests/parallel_fastq_sequence_hashing.sh \
	tests/from_stream_fastq.sh tests/merge.sh tests/min_qual.sh \
	tests/big.sh tests/parsers.sh tests/small.sh \
	tests/parallel_fastq_direct_indexing.sh \
	unit_tests/unit_tests.sh
bin_test_all_SOURCES = unit_tests/test_offsets_key_value.cc \
	unit_tests/test_simple_circular_buffer.cc \
	unit_tests/test_square_binary_matrix.cc \
	jellyfish/square_binary_matrix.cc
bin_test_all_CXXFLAGS = -I$(top_srcdir)/unit_tests/gtest/include -I$(top_srcdir)/unit_tests/gtest
bin_test_all_LDADD = libgtest_main.la

##############################
# Gtest build.
##############################
# Build rules for libraries.
check_LTLIBRARIES = libgtest.la libgtest_main.la
libgtest_la_SOURCES = unit_tests/gtest/src/gtest-all.cc
libgtest_main_la_SOURCES = unit_tests/gtest/src/gtest_main.cc
libgtest_main_la_LIBADD = libgtest.la
libgtest_la_CXXFLAGS = -I$(top_srcdir)/unit_tests/gtest	\
-I$(top_srcdir)/unit_tests/gtest/include

libgtest_main_la_CXXFLAGS = -I$(top_srcdir)/unit_tests/gtest	\
-I$(top_srcdir)/unit_tests/gtest/include


# gtest source files that we don't compile directly.  They are
# #included by gtest-all.cc.
GTEST_SRC = unit_tests/gtest/src/gtest-death-test.cc	\
	    unit_tests/gtest/src/gtest-filepath.cc	\
	    unit_tests/gtest/src/gtest-internal-inl.h	\
	    unit_tests/gtest/src/gtest-port.cc		\
	    unit_tests/gtest/src/gtest-printers.cc	\
	    unit_tests/gtest/src/gtest-test-part.cc	\
	    unit_tests/gtest/src/gtest-typed-test.cc	\
	    unit_tests/gtest/src/gtest.cc


# Headers, not installed
GTEST_I = unit_tests/gtest/include/gtest
noinst_HEADERS = $(GTEST_I)/gtest-death-test.h				\
                 $(GTEST_I)/gtest-message.h				\
                 $(GTEST_I)/gtest-param-test.h				\
                 $(GTEST_I)/gtest-printers.h $(GTEST_I)/gtest-spi.h	\
                 $(GTEST_I)/gtest-test-part.h				\
                 $(GTEST_I)/gtest-typed-test.h $(GTEST_I)/gtest.h	\
                 $(GTEST_I)/gtest_pred_impl.h $(GTEST_I)/gtest_prod.h	\
                 $(GTEST_I)/internal/gtest-death-test-internal.h	\
                 $(GTEST_I)/internal/gtest-filepath.h			\
                 $(GTEST_I)/internal/gtest-internal.h			\
                 $(GTEST_I)/internal/gtest-linked_ptr.h			\
                 $(GTEST_I)/internal/gtest-param-util-generated.h	\
                 $(GTEST_I)/internal/gtest-param-util.h			\
                 $(GTEST_I)/internal/gtest-port.h			\
                 $(GTEST_I)/internal/gtest-string.h			\
                 $(GTEST_I)/internal/gtest-tuple.h			\
                 $(GTEST_I)/internal/gtest-type-util.h

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .html .lo .log .o .obj .sh .sh$(EXEEXT)
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/gtest.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
tests/compat.sh: $(top_builddir)/config.status $(top_srcdir)/tests/compat.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
jellyfish-1.1.pc: $(top_builddir)/config.status $(srcdir)/jellyfish-1.1.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
unit_tests/gtest/src/$(am__dirstamp):
	@$(MKDIR_P) unit_tests/gtest/src
	@: > unit_tests/gtest/src/$(am__dirstamp)
unit_tests/gtest/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unit_tests/gtest/src/$(DEPDIR)
	@: > unit_tests/gtest/src/$(DEPDIR)/$(am__dirstamp)
unit_tests/gtest/src/libgtest_la-gtest-all.lo:  \
	unit_tests/gtest/src/$(am__dirstamp) \
	unit_tests/gtest/src/$(DEPDIR)/$(am__dirstamp)
libgtest.la: $(libgtest_la_OBJECTS) $(libgtest_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libgtest_la_LINK)  $(libgtest_la_OBJECTS) $(libgtest_la_LIBADD) $(LIBS)
unit_tests/gtest/src/libgtest_main_la-gtest_main.lo:  \
	unit_tests/gtest/src/$(am__dirstamp) \
	unit_tests/gtest/src/$(DEPDIR)/$(am__dirstamp)
libgtest_main.la: $(libgtest_main_la_OBJECTS) $(libgtest_main_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libgtest_main_la_LINK)  $(libgtest_main_la_OBJECTS) $(libgtest_main_la_LIBADD) $(LIBS)
jellyfish/$(am__dirstamp):
	@$(MKDIR_P) jellyfish
	@: > jellyfish/$(am__dirstamp)
jellyfish/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) jellyfish/$(DEPDIR)
	@: > jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-square_binary_matrix.lo:  \
	jellyfish/$(am__dirstamp) jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-err.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-misc.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-storage.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-thread_exec.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-time.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-file_parser.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-read_parser.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-parse_read.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-half.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-mapped_file.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-parse_dna.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-parse_quake.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-parse_qual_dna.lo:  \
	jellyfish/$(am__dirstamp) jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-sequence_parser.lo:  \
	jellyfish/$(am__dirstamp) jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-seq_qual_parser.lo:  \
	jellyfish/$(am__dirstamp) jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-backtrace.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-floats.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-dbg.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-allocators_mmap.lo:  \
	jellyfish/$(am__dirstamp) jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/libjellyfish_la-dna_codes.lo: jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
libjellyfish.la: $(libjellyfish_la_OBJECTS) $(libjellyfish_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libjellyfish_la_LINK) -rpath $(libdir) $(libjellyfish_la_OBJECTS) $(libjellyfish_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
jellyfish/generate_sequence.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/misc.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/mersenne.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/square_binary_matrix.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/backtrace.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/dbg.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/time.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
bin/$(am__dirstamp):
	@$(MKDIR_P) bin
	@: > bin/$(am__dirstamp)
bin/generate_sequence$(EXEEXT): $(bin_generate_sequence_OBJECTS) $(bin_generate_sequence_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/generate_sequence$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_generate_sequence_OBJECTS) $(bin_generate_sequence_LDADD) $(LIBS)
jellyfish/jellyfish.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/stats_main.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/hash_merge.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/storage.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/err.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/mer_counter.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/histo_main.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/dump_main.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/thread_exec.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/query_main.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/dump_fastq_main.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/histo_fastq_main.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/cite.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/parse_dna.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/file_parser.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/parse_quake.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/parse_qual_dna.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/sequence_parser.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/seq_qual_parser.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/half.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/hash_fastq_merge.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/mapped_file.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/floats.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/allocators_mmap.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/yaggo.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/dna_codes.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
bin/jellyfish$(EXEEXT): $(bin_jellyfish_OBJECTS) $(bin_jellyfish_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/jellyfish$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_jellyfish_OBJECTS) $(bin_jellyfish_LDADD) $(LIBS)
unit_tests/$(am__dirstamp):
	@$(MKDIR_P) unit_tests
	@: > unit_tests/$(am__dirstamp)
unit_tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unit_tests/$(DEPDIR)
	@: > unit_tests/$(DEPDIR)/$(am__dirstamp)
unit_tests/bin_test_all-test_offsets_key_value.$(OBJEXT):  \
	unit_tests/$(am__dirstamp) \
	unit_tests/$(DEPDIR)/$(am__dirstamp)
unit_tests/bin_test_all-test_simple_circular_buffer.$(OBJEXT):  \
	unit_tests/$(am__dirstamp) \
	unit_tests/$(DEPDIR)/$(am__dirstamp)
unit_tests/bin_test_all-test_square_binary_matrix.$(OBJEXT):  \
	unit_tests/$(am__dirstamp) \
	unit_tests/$(DEPDIR)/$(am__dirstamp)
jellyfish/bin_test_all-square_binary_matrix.$(OBJEXT):  \
	jellyfish/$(am__dirstamp) jellyfish/$(DEPDIR)/$(am__dirstamp)
bin/test_all$(EXEEXT): $(bin_test_all_OBJECTS) $(bin_test_all_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/test_all$(EXEEXT)
	$(AM_V_CXXLD)$(bin_test_all_LINK) $(bin_test_all_OBJECTS) $(bin_test_all_LDADD) $(LIBS)
jellyfish/test_double_fifo_input.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
bin/test_double_fifo_input$(EXEEXT): $(bin_test_double_fifo_input_OBJECTS) $(bin_test_double_fifo_input_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/test_double_fifo_input$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_test_double_fifo_input_OBJECTS) $(bin_test_double_fifo_input_LDADD) $(LIBS)
jellyfish/test_read_parser.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/read_parser.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
jellyfish/parse_read.$(OBJEXT): jellyfish/$(am__dirstamp) \
	jellyfish/$(DEPDIR)/$(am__dirstamp)
bin/test_read_parser$(EXEEXT): $(bin_test_read_parser_OBJECTS) $(bin_test_read_parser_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/test_read_parser$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bin_test_read_parser_OBJECTS) $(bin_test_read_parser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f jellyfish/allocators_mmap.$(OBJEXT)
	-rm -f jellyfish/backtrace.$(OBJEXT)
	-rm -f jellyfish/bin_test_all-square_binary_matrix.$(OBJEXT)
	-rm -f jellyfish/cite.$(OBJEXT)
	-rm -f jellyfish/dbg.$(OBJEXT)
	-rm -f jellyfish/dna_codes.$(OBJEXT)
	-rm -f jellyfish/dump_fastq_main.$(OBJEXT)
	-rm -f jellyfish/dump_main.$(OBJEXT)
	-rm -f jellyfish/err.$(OBJEXT)
	-rm -f jellyfish/file_parser.$(OBJEXT)
	-rm -f jellyfish/floats.$(OBJEXT)
	-rm -f jellyfish/generate_sequence.$(OBJEXT)
	-rm -f jellyfish/half.$(OBJEXT)
	-rm -f jellyfish/hash_fastq_merge.$(OBJEXT)
	-rm -f jellyfish/hash_merge.$(OBJEXT)
	-rm -f jellyfish/histo_fastq_main.$(OBJEXT)
	-rm -f jellyfish/histo_main.$(OBJEXT)
	-rm -f jellyfish/jellyfish.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-allocators_mmap.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-allocators_mmap.lo
	-rm -f jellyfish/libjellyfish_la-backtrace.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-backtrace.lo
	-rm -f jellyfish/libjellyfish_la-dbg.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-dbg.lo
	-rm -f jellyfish/libjellyfish_la-dna_codes.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-dna_codes.lo
	-rm -f jellyfish/libjellyfish_la-err.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-err.lo
	-rm -f jellyfish/libjellyfish_la-file_parser.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-file_parser.lo
	-rm -f jellyfish/libjellyfish_la-floats.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-floats.lo
	-rm -f jellyfish/libjellyfish_la-half.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-half.lo
	-rm -f jellyfish/libjellyfish_la-mapped_file.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-mapped_file.lo
	-rm -f jellyfish/libjellyfish_la-misc.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-misc.lo
	-rm -f jellyfish/libjellyfish_la-parse_dna.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-parse_dna.lo
	-rm -f jellyfish/libjellyfish_la-parse_quake.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-parse_quake.lo
	-rm -f jellyfish/libjellyfish_la-parse_qual_dna.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-parse_qual_dna.lo
	-rm -f jellyfish/libjellyfish_la-parse_read.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-parse_read.lo
	-rm -f jellyfish/libjellyfish_la-read_parser.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-read_parser.lo
	-rm -f jellyfish/libjellyfish_la-seq_qual_parser.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-seq_qual_parser.lo
	-rm -f jellyfish/libjellyfish_la-sequence_parser.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-sequence_parser.lo
	-rm -f jellyfish/libjellyfish_la-square_binary_matrix.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-square_binary_matrix.lo
	-rm -f jellyfish/libjellyfish_la-storage.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-storage.lo
	-rm -f jellyfish/libjellyfish_la-thread_exec.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-thread_exec.lo
	-rm -f jellyfish/libjellyfish_la-time.$(OBJEXT)
	-rm -f jellyfish/libjellyfish_la-time.lo
	-rm -f jellyfish/mapped_file.$(OBJEXT)
	-rm -f jellyfish/mer_counter.$(OBJEXT)
	-rm -f jellyfish/mersenne.$(OBJEXT)
	-rm -f jellyfish/misc.$(OBJEXT)
	-rm -f jellyfish/parse_dna.$(OBJEXT)
	-rm -f jellyfish/parse_quake.$(OBJEXT)
	-rm -f jellyfish/parse_qual_dna.$(OBJEXT)
	-rm -f jellyfish/parse_read.$(OBJEXT)
	-rm -f jellyfish/query_main.$(OBJEXT)
	-rm -f jellyfish/read_parser.$(OBJEXT)
	-rm -f jellyfish/seq_qual_parser.$(OBJEXT)
	-rm -f jellyfish/sequence_parser.$(OBJEXT)
	-rm -f jellyfish/square_binary_matrix.$(OBJEXT)
	-rm -f jellyfish/stats_main.$(OBJEXT)
	-rm -f jellyfish/storage.$(OBJEXT)
	-rm -f jellyfish/test_double_fifo_input.$(OBJEXT)
	-rm -f jellyfish/test_read_parser.$(OBJEXT)
	-rm -f jellyfish/thread_exec.$(OBJEXT)
	-rm -f jellyfish/time.$(OBJEXT)
	-rm -f jellyfish/yaggo.$(OBJEXT)
	-rm -f unit_tests/bin_test_all-test_offsets_key_value.$(OBJEXT)
	-rm -f unit_tests/bin_test_all-test_simple_circular_buffer.$(OBJEXT)
	-rm -f unit_tests/bin_test_all-test_square_binary_matrix.$(OBJEXT)
	-rm -f unit_tests/gtest/src/libgtest_la-gtest-all.$(OBJEXT)
	-rm -f unit_tests/gtest/src/libgtest_la-gtest-all.lo
	-rm -f unit_tests/gtest/src/libgtest_main_la-gtest_main.$(OBJEXT)
	-rm -f unit_tests/gtest/src/libgtest_main_la-gtest_main.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/allocators_mmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/backtrace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/cite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/dbg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/dna_codes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/dump_fastq_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/dump_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/err.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/file_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/floats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/generate_sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/half.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/hash_fastq_merge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/hash_merge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/histo_fastq_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/histo_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/jellyfish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-allocators_mmap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-backtrace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-dbg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-dna_codes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-err.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-file_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-floats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-half.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-mapped_file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-parse_dna.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-parse_quake.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-parse_qual_dna.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-parse_read.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-read_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-seq_qual_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-sequence_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-square_binary_matrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-storage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-thread_exec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/libjellyfish_la-time.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/mapped_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/mer_counter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/mersenne.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/parse_dna.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/parse_quake.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/parse_qual_dna.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/parse_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/query_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/read_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/seq_qual_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/sequence_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/square_binary_matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/stats_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/storage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/test_double_fifo_input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/test_read_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/thread_exec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@jellyfish/$(DEPDIR)/yaggo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unit_tests/gtest/src/$(DEPDIR)/libgtest_la-gtest-all.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@unit_tests/gtest/src/$(DEPDIR)/libgtest_main_la-gtest_main.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

unit_tests/gtest/src/libgtest_la-gtest-all.lo: unit_tests/gtest/src/gtest-all.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_la_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/gtest/src/libgtest_la-gtest-all.lo -MD -MP -MF unit_tests/gtest/src/$(DEPDIR)/libgtest_la-gtest-all.Tpo -c -o unit_tests/gtest/src/libgtest_la-gtest-all.lo `test -f 'unit_tests/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`unit_tests/gtest/src/gtest-all.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/gtest/src/$(DEPDIR)/libgtest_la-gtest-all.Tpo unit_tests/gtest/src/$(DEPDIR)/libgtest_la-gtest-all.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/gtest/src/gtest-all.cc' object='unit_tests/gtest/src/libgtest_la-gtest-all.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_la_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/gtest/src/libgtest_la-gtest-all.lo `test -f 'unit_tests/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`unit_tests/gtest/src/gtest-all.cc

unit_tests/gtest/src/libgtest_main_la-gtest_main.lo: unit_tests/gtest/src/gtest_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_main_la_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/gtest/src/libgtest_main_la-gtest_main.lo -MD -MP -MF unit_tests/gtest/src/$(DEPDIR)/libgtest_main_la-gtest_main.Tpo -c -o unit_tests/gtest/src/libgtest_main_la-gtest_main.lo `test -f 'unit_tests/gtest/src/gtest_main.cc' || echo '$(srcdir)/'`unit_tests/gtest/src/gtest_main.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/gtest/src/$(DEPDIR)/libgtest_main_la-gtest_main.Tpo unit_tests/gtest/src/$(DEPDIR)/libgtest_main_la-gtest_main.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/gtest/src/gtest_main.cc' object='unit_tests/gtest/src/libgtest_main_la-gtest_main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtest_main_la_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/gtest/src/libgtest_main_la-gtest_main.lo `test -f 'unit_tests/gtest/src/gtest_main.cc' || echo '$(srcdir)/'`unit_tests/gtest/src/gtest_main.cc

jellyfish/libjellyfish_la-square_binary_matrix.lo: jellyfish/square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-square_binary_matrix.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-square_binary_matrix.Tpo -c -o jellyfish/libjellyfish_la-square_binary_matrix.lo `test -f 'jellyfish/square_binary_matrix.cc' || echo '$(srcdir)/'`jellyfish/square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-square_binary_matrix.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-square_binary_matrix.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/square_binary_matrix.cc' object='jellyfish/libjellyfish_la-square_binary_matrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-square_binary_matrix.lo `test -f 'jellyfish/square_binary_matrix.cc' || echo '$(srcdir)/'`jellyfish/square_binary_matrix.cc

jellyfish/libjellyfish_la-err.lo: jellyfish/err.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-err.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-err.Tpo -c -o jellyfish/libjellyfish_la-err.lo `test -f 'jellyfish/err.cc' || echo '$(srcdir)/'`jellyfish/err.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-err.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-err.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/err.cc' object='jellyfish/libjellyfish_la-err.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-err.lo `test -f 'jellyfish/err.cc' || echo '$(srcdir)/'`jellyfish/err.cc

jellyfish/libjellyfish_la-misc.lo: jellyfish/misc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-misc.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-misc.Tpo -c -o jellyfish/libjellyfish_la-misc.lo `test -f 'jellyfish/misc.cc' || echo '$(srcdir)/'`jellyfish/misc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-misc.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-misc.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/misc.cc' object='jellyfish/libjellyfish_la-misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-misc.lo `test -f 'jellyfish/misc.cc' || echo '$(srcdir)/'`jellyfish/misc.cc

jellyfish/libjellyfish_la-storage.lo: jellyfish/storage.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-storage.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-storage.Tpo -c -o jellyfish/libjellyfish_la-storage.lo `test -f 'jellyfish/storage.cc' || echo '$(srcdir)/'`jellyfish/storage.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-storage.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-storage.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/storage.cc' object='jellyfish/libjellyfish_la-storage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-storage.lo `test -f 'jellyfish/storage.cc' || echo '$(srcdir)/'`jellyfish/storage.cc

jellyfish/libjellyfish_la-thread_exec.lo: jellyfish/thread_exec.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-thread_exec.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-thread_exec.Tpo -c -o jellyfish/libjellyfish_la-thread_exec.lo `test -f 'jellyfish/thread_exec.cc' || echo '$(srcdir)/'`jellyfish/thread_exec.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-thread_exec.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-thread_exec.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/thread_exec.cc' object='jellyfish/libjellyfish_la-thread_exec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-thread_exec.lo `test -f 'jellyfish/thread_exec.cc' || echo '$(srcdir)/'`jellyfish/thread_exec.cc

jellyfish/libjellyfish_la-time.lo: jellyfish/time.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-time.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-time.Tpo -c -o jellyfish/libjellyfish_la-time.lo `test -f 'jellyfish/time.cc' || echo '$(srcdir)/'`jellyfish/time.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-time.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-time.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/time.cc' object='jellyfish/libjellyfish_la-time.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-time.lo `test -f 'jellyfish/time.cc' || echo '$(srcdir)/'`jellyfish/time.cc

jellyfish/libjellyfish_la-file_parser.lo: jellyfish/file_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-file_parser.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-file_parser.Tpo -c -o jellyfish/libjellyfish_la-file_parser.lo `test -f 'jellyfish/file_parser.cc' || echo '$(srcdir)/'`jellyfish/file_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-file_parser.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-file_parser.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/file_parser.cc' object='jellyfish/libjellyfish_la-file_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-file_parser.lo `test -f 'jellyfish/file_parser.cc' || echo '$(srcdir)/'`jellyfish/file_parser.cc

jellyfish/libjellyfish_la-read_parser.lo: jellyfish/read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-read_parser.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-read_parser.Tpo -c -o jellyfish/libjellyfish_la-read_parser.lo `test -f 'jellyfish/read_parser.cc' || echo '$(srcdir)/'`jellyfish/read_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-read_parser.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-read_parser.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/read_parser.cc' object='jellyfish/libjellyfish_la-read_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-read_parser.lo `test -f 'jellyfish/read_parser.cc' || echo '$(srcdir)/'`jellyfish/read_parser.cc

jellyfish/libjellyfish_la-parse_read.lo: jellyfish/parse_read.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-parse_read.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-parse_read.Tpo -c -o jellyfish/libjellyfish_la-parse_read.lo `test -f 'jellyfish/parse_read.cc' || echo '$(srcdir)/'`jellyfish/parse_read.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-parse_read.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-parse_read.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/parse_read.cc' object='jellyfish/libjellyfish_la-parse_read.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-parse_read.lo `test -f 'jellyfish/parse_read.cc' || echo '$(srcdir)/'`jellyfish/parse_read.cc

jellyfish/libjellyfish_la-half.lo: jellyfish/half.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-half.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-half.Tpo -c -o jellyfish/libjellyfish_la-half.lo `test -f 'jellyfish/half.cpp' || echo '$(srcdir)/'`jellyfish/half.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-half.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-half.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/half.cpp' object='jellyfish/libjellyfish_la-half.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-half.lo `test -f 'jellyfish/half.cpp' || echo '$(srcdir)/'`jellyfish/half.cpp

jellyfish/libjellyfish_la-mapped_file.lo: jellyfish/mapped_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-mapped_file.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-mapped_file.Tpo -c -o jellyfish/libjellyfish_la-mapped_file.lo `test -f 'jellyfish/mapped_file.cc' || echo '$(srcdir)/'`jellyfish/mapped_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-mapped_file.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-mapped_file.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/mapped_file.cc' object='jellyfish/libjellyfish_la-mapped_file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-mapped_file.lo `test -f 'jellyfish/mapped_file.cc' || echo '$(srcdir)/'`jellyfish/mapped_file.cc

jellyfish/libjellyfish_la-parse_dna.lo: jellyfish/parse_dna.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-parse_dna.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-parse_dna.Tpo -c -o jellyfish/libjellyfish_la-parse_dna.lo `test -f 'jellyfish/parse_dna.cc' || echo '$(srcdir)/'`jellyfish/parse_dna.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-parse_dna.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-parse_dna.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/parse_dna.cc' object='jellyfish/libjellyfish_la-parse_dna.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-parse_dna.lo `test -f 'jellyfish/parse_dna.cc' || echo '$(srcdir)/'`jellyfish/parse_dna.cc

jellyfish/libjellyfish_la-parse_quake.lo: jellyfish/parse_quake.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-parse_quake.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-parse_quake.Tpo -c -o jellyfish/libjellyfish_la-parse_quake.lo `test -f 'jellyfish/parse_quake.cc' || echo '$(srcdir)/'`jellyfish/parse_quake.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-parse_quake.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-parse_quake.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/parse_quake.cc' object='jellyfish/libjellyfish_la-parse_quake.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-parse_quake.lo `test -f 'jellyfish/parse_quake.cc' || echo '$(srcdir)/'`jellyfish/parse_quake.cc

jellyfish/libjellyfish_la-parse_qual_dna.lo: jellyfish/parse_qual_dna.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-parse_qual_dna.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-parse_qual_dna.Tpo -c -o jellyfish/libjellyfish_la-parse_qual_dna.lo `test -f 'jellyfish/parse_qual_dna.cc' || echo '$(srcdir)/'`jellyfish/parse_qual_dna.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-parse_qual_dna.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-parse_qual_dna.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/parse_qual_dna.cc' object='jellyfish/libjellyfish_la-parse_qual_dna.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-parse_qual_dna.lo `test -f 'jellyfish/parse_qual_dna.cc' || echo '$(srcdir)/'`jellyfish/parse_qual_dna.cc

jellyfish/libjellyfish_la-sequence_parser.lo: jellyfish/sequence_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-sequence_parser.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-sequence_parser.Tpo -c -o jellyfish/libjellyfish_la-sequence_parser.lo `test -f 'jellyfish/sequence_parser.cc' || echo '$(srcdir)/'`jellyfish/sequence_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-sequence_parser.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-sequence_parser.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/sequence_parser.cc' object='jellyfish/libjellyfish_la-sequence_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-sequence_parser.lo `test -f 'jellyfish/sequence_parser.cc' || echo '$(srcdir)/'`jellyfish/sequence_parser.cc

jellyfish/libjellyfish_la-seq_qual_parser.lo: jellyfish/seq_qual_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-seq_qual_parser.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-seq_qual_parser.Tpo -c -o jellyfish/libjellyfish_la-seq_qual_parser.lo `test -f 'jellyfish/seq_qual_parser.cc' || echo '$(srcdir)/'`jellyfish/seq_qual_parser.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-seq_qual_parser.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-seq_qual_parser.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/seq_qual_parser.cc' object='jellyfish/libjellyfish_la-seq_qual_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-seq_qual_parser.lo `test -f 'jellyfish/seq_qual_parser.cc' || echo '$(srcdir)/'`jellyfish/seq_qual_parser.cc

jellyfish/libjellyfish_la-backtrace.lo: jellyfish/backtrace.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-backtrace.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-backtrace.Tpo -c -o jellyfish/libjellyfish_la-backtrace.lo `test -f 'jellyfish/backtrace.cc' || echo '$(srcdir)/'`jellyfish/backtrace.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-backtrace.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-backtrace.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/backtrace.cc' object='jellyfish/libjellyfish_la-backtrace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-backtrace.lo `test -f 'jellyfish/backtrace.cc' || echo '$(srcdir)/'`jellyfish/backtrace.cc

jellyfish/libjellyfish_la-floats.lo: jellyfish/floats.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-floats.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-floats.Tpo -c -o jellyfish/libjellyfish_la-floats.lo `test -f 'jellyfish/floats.cc' || echo '$(srcdir)/'`jellyfish/floats.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-floats.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-floats.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/floats.cc' object='jellyfish/libjellyfish_la-floats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-floats.lo `test -f 'jellyfish/floats.cc' || echo '$(srcdir)/'`jellyfish/floats.cc

jellyfish/libjellyfish_la-dbg.lo: jellyfish/dbg.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-dbg.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-dbg.Tpo -c -o jellyfish/libjellyfish_la-dbg.lo `test -f 'jellyfish/dbg.cc' || echo '$(srcdir)/'`jellyfish/dbg.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-dbg.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-dbg.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/dbg.cc' object='jellyfish/libjellyfish_la-dbg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-dbg.lo `test -f 'jellyfish/dbg.cc' || echo '$(srcdir)/'`jellyfish/dbg.cc

jellyfish/libjellyfish_la-allocators_mmap.lo: jellyfish/allocators_mmap.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-allocators_mmap.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-allocators_mmap.Tpo -c -o jellyfish/libjellyfish_la-allocators_mmap.lo `test -f 'jellyfish/allocators_mmap.cc' || echo '$(srcdir)/'`jellyfish/allocators_mmap.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-allocators_mmap.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-allocators_mmap.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/allocators_mmap.cc' object='jellyfish/libjellyfish_la-allocators_mmap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-allocators_mmap.lo `test -f 'jellyfish/allocators_mmap.cc' || echo '$(srcdir)/'`jellyfish/allocators_mmap.cc

jellyfish/libjellyfish_la-dna_codes.lo: jellyfish/dna_codes.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/libjellyfish_la-dna_codes.lo -MD -MP -MF jellyfish/$(DEPDIR)/libjellyfish_la-dna_codes.Tpo -c -o jellyfish/libjellyfish_la-dna_codes.lo `test -f 'jellyfish/dna_codes.cc' || echo '$(srcdir)/'`jellyfish/dna_codes.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/libjellyfish_la-dna_codes.Tpo jellyfish/$(DEPDIR)/libjellyfish_la-dna_codes.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/dna_codes.cc' object='jellyfish/libjellyfish_la-dna_codes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjellyfish_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/libjellyfish_la-dna_codes.lo `test -f 'jellyfish/dna_codes.cc' || echo '$(srcdir)/'`jellyfish/dna_codes.cc

unit_tests/bin_test_all-test_offsets_key_value.o: unit_tests/test_offsets_key_value.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/bin_test_all-test_offsets_key_value.o -MD -MP -MF unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Tpo -c -o unit_tests/bin_test_all-test_offsets_key_value.o `test -f 'unit_tests/test_offsets_key_value.cc' || echo '$(srcdir)/'`unit_tests/test_offsets_key_value.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Tpo unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/test_offsets_key_value.cc' object='unit_tests/bin_test_all-test_offsets_key_value.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/bin_test_all-test_offsets_key_value.o `test -f 'unit_tests/test_offsets_key_value.cc' || echo '$(srcdir)/'`unit_tests/test_offsets_key_value.cc

unit_tests/bin_test_all-test_offsets_key_value.obj: unit_tests/test_offsets_key_value.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/bin_test_all-test_offsets_key_value.obj -MD -MP -MF unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Tpo -c -o unit_tests/bin_test_all-test_offsets_key_value.obj `if test -f 'unit_tests/test_offsets_key_value.cc'; then $(CYGPATH_W) 'unit_tests/test_offsets_key_value.cc'; else $(CYGPATH_W) '$(srcdir)/unit_tests/test_offsets_key_value.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Tpo unit_tests/$(DEPDIR)/bin_test_all-test_offsets_key_value.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/test_offsets_key_value.cc' object='unit_tests/bin_test_all-test_offsets_key_value.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/bin_test_all-test_offsets_key_value.obj `if test -f 'unit_tests/test_offsets_key_value.cc'; then $(CYGPATH_W) 'unit_tests/test_offsets_key_value.cc'; else $(CYGPATH_W) '$(srcdir)/unit_tests/test_offsets_key_value.cc'; fi`

unit_tests/bin_test_all-test_simple_circular_buffer.o: unit_tests/test_simple_circular_buffer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/bin_test_all-test_simple_circular_buffer.o -MD -MP -MF unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Tpo -c -o unit_tests/bin_test_all-test_simple_circular_buffer.o `test -f 'unit_tests/test_simple_circular_buffer.cc' || echo '$(srcdir)/'`unit_tests/test_simple_circular_buffer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Tpo unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/test_simple_circular_buffer.cc' object='unit_tests/bin_test_all-test_simple_circular_buffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/bin_test_all-test_simple_circular_buffer.o `test -f 'unit_tests/test_simple_circular_buffer.cc' || echo '$(srcdir)/'`unit_tests/test_simple_circular_buffer.cc

unit_tests/bin_test_all-test_simple_circular_buffer.obj: unit_tests/test_simple_circular_buffer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/bin_test_all-test_simple_circular_buffer.obj -MD -MP -MF unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Tpo -c -o unit_tests/bin_test_all-test_simple_circular_buffer.obj `if test -f 'unit_tests/test_simple_circular_buffer.cc'; then $(CYGPATH_W) 'unit_tests/test_simple_circular_buffer.cc'; else $(CYGPATH_W) '$(srcdir)/unit_tests/test_simple_circular_buffer.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Tpo unit_tests/$(DEPDIR)/bin_test_all-test_simple_circular_buffer.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/test_simple_circular_buffer.cc' object='unit_tests/bin_test_all-test_simple_circular_buffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/bin_test_all-test_simple_circular_buffer.obj `if test -f 'unit_tests/test_simple_circular_buffer.cc'; then $(CYGPATH_W) 'unit_tests/test_simple_circular_buffer.cc'; else $(CYGPATH_W) '$(srcdir)/unit_tests/test_simple_circular_buffer.cc'; fi`

unit_tests/bin_test_all-test_square_binary_matrix.o: unit_tests/test_square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/bin_test_all-test_square_binary_matrix.o -MD -MP -MF unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Tpo -c -o unit_tests/bin_test_all-test_square_binary_matrix.o `test -f 'unit_tests/test_square_binary_matrix.cc' || echo '$(srcdir)/'`unit_tests/test_square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Tpo unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/test_square_binary_matrix.cc' object='unit_tests/bin_test_all-test_square_binary_matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/bin_test_all-test_square_binary_matrix.o `test -f 'unit_tests/test_square_binary_matrix.cc' || echo '$(srcdir)/'`unit_tests/test_square_binary_matrix.cc

unit_tests/bin_test_all-test_square_binary_matrix.obj: unit_tests/test_square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT unit_tests/bin_test_all-test_square_binary_matrix.obj -MD -MP -MF unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Tpo -c -o unit_tests/bin_test_all-test_square_binary_matrix.obj `if test -f 'unit_tests/test_square_binary_matrix.cc'; then $(CYGPATH_W) 'unit_tests/test_square_binary_matrix.cc'; else $(CYGPATH_W) '$(srcdir)/unit_tests/test_square_binary_matrix.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Tpo unit_tests/$(DEPDIR)/bin_test_all-test_square_binary_matrix.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unit_tests/test_square_binary_matrix.cc' object='unit_tests/bin_test_all-test_square_binary_matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o unit_tests/bin_test_all-test_square_binary_matrix.obj `if test -f 'unit_tests/test_square_binary_matrix.cc'; then $(CYGPATH_W) 'unit_tests/test_square_binary_matrix.cc'; else $(CYGPATH_W) '$(srcdir)/unit_tests/test_square_binary_matrix.cc'; fi`

jellyfish/bin_test_all-square_binary_matrix.o: jellyfish/square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/bin_test_all-square_binary_matrix.o -MD -MP -MF jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Tpo -c -o jellyfish/bin_test_all-square_binary_matrix.o `test -f 'jellyfish/square_binary_matrix.cc' || echo '$(srcdir)/'`jellyfish/square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Tpo jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/square_binary_matrix.cc' object='jellyfish/bin_test_all-square_binary_matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/bin_test_all-square_binary_matrix.o `test -f 'jellyfish/square_binary_matrix.cc' || echo '$(srcdir)/'`jellyfish/square_binary_matrix.cc

jellyfish/bin_test_all-square_binary_matrix.obj: jellyfish/square_binary_matrix.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -MT jellyfish/bin_test_all-square_binary_matrix.obj -MD -MP -MF jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Tpo -c -o jellyfish/bin_test_all-square_binary_matrix.obj `if test -f 'jellyfish/square_binary_matrix.cc'; then $(CYGPATH_W) 'jellyfish/square_binary_matrix.cc'; else $(CYGPATH_W) '$(srcdir)/jellyfish/square_binary_matrix.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Tpo jellyfish/$(DEPDIR)/bin_test_all-square_binary_matrix.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jellyfish/square_binary_matrix.cc' object='jellyfish/bin_test_all-square_binary_matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_test_all_CXXFLAGS) $(CXXFLAGS) -c -o jellyfish/bin_test_all-square_binary_matrix.obj `if test -f 'jellyfish/square_binary_matrix.cc'; then $(CYGPATH_W) 'jellyfish/square_binary_matrix.cc'; else $(CYGPATH_W) '$(srcdir)/jellyfish/square_binary_matrix.cc'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bin/.libs bin/_libs
	-rm -rf jellyfish/.libs jellyfish/_libs
	-rm -rf unit_tests/gtest/src/.libs unit_tests/gtest/src/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(man1_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man1dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man1dir)" && rm -f $$files; }
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files
install-library_includeHEADERS: $(library_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(library_includedir)" || $(MKDIR_P) "$(DESTDIR)$(library_includedir)"
	@list='$(library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(library_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(library_includedir)" || exit $$?; \
	done

uninstall-library_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(library_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(library_includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# To be appended to the command running the test.  Handle the stdout
# and stderr redirection, and catch the exit status.
am__check_post =					\
>$@-t 2>&1;						\
estatus=$$?;						\
if test -n '$(DISABLE_HARD_ERRORS)'			\
   && test $$estatus -eq 99; then			\
  estatus=1;						\
fi;							\
TERM=$$__SAVED_TERM; export TERM;			\
$(am__tty_colors);					\
xfailed=PASS;						\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    xfailed=XFAIL;;					\
esac;							\
case $$estatus:$$xfailed in				\
    0:XFAIL) col=$$red; res=XPASS;;			\
    0:*)     col=$$grn; res=PASS ;;			\
    77:*)    col=$$blu; res=SKIP ;;			\
    99:*)    col=$$red; res=FAIL ;;			\
    *:XFAIL) col=$$lgn; res=XFAIL;;			\
    *:*)     col=$$red; res=FAIL ;;			\
esac;							\
echo "$${col}$$res$${std}: $$f";			\
echo "$$res: $$f (exit: $$estatus)" |			\
  $(am__rst_section) >$@;				\
cat $@-t >>$@;						\
rm -f $@-t

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__sh_e_setup);						\
	list='$(TEST_LOGS)';						\
	results=`for f in $$list; do					\
		   read line < $$f && echo "$$line" || echo FAIL;	\
		 done`;							\
	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
	fail=`echo "$$results" | grep -c '^FAIL'`;			\
	pass=`echo "$$results" | grep -c '^PASS'`;			\
	skip=`echo "$$results" | grep -c '^SKIP'`;			\
	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
	failures=`expr $$fail + $$xpass`;				\
	all=`expr $$all - $$skip`;					\
	if test "$$all" -eq 1; then tests=test; All=;			\
	else tests=tests; All="All "; fi;				\
	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
	  fail=0:xpass=0:xfail=0)					\
	    msg="$$All$$all $$tests passed.  ";				\
	    exit=true;;							\
	  fail=0:xpass=0:xfail=*)					\
	    msg="$$All$$all $$tests behaved as expected";		\
	    if test "$$xfail" -eq 1; then xfailures=failure;		\
	    else xfailures=failures; fi;				\
	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
	    exit=true;;							\
	  fail=*:xpass=0:xfail=*)					\
	    msg="$$fail of $$all $$tests failed.  ";			\
	    exit=false;;						\
	  fail=*:xpass=*:xfail=*)					\
	    msg="$$failures of $$all $$tests did not behave as expected"; \
	    if test "$$xpass" -eq 1; then xpasses=pass;			\
	    else xpasses=passes; fi;					\
	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
	    exit=false;;						\
	  *)								\
	    echo >&2 "incorrect case"; exit 4;;				\
	esac;								\
	if test "$$skip" -ne 0; then					\
	  if test "$$skip" -eq 1; then					\
	    msg="$$msg($$skip test was not run).  ";			\
	  else								\
	    msg="$$msg($$skip tests were not run).  ";			\
	  fi;								\
	fi;								\
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  echo "$$msg";							\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for f in $$list; do						\
	    read line < $$f;						\
	    case $$line in						\
	      PASS:*|XFAIL:*);;						\
	      *) echo; cat $$f;;					\
	    esac;							\
	  done;								\
	} >$(TEST_SUITE_LOG).tmp;					\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if test "$$failures" -ne 0; then				\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$(am__tty_colors);						\
	if $$exit; then							\
	  echo $(ECHO_N) "$$grn$(ECHO_C)";				\
	 else								\
	  echo $(ECHO_N) "$$red$(ECHO_C)";				\
	fi;								\
	echo "$$msg" | $(am__text_box);					\
	echo $(ECHO_N) "$$std$(ECHO_C)";				\
	$$exit

# Run all the tests.
check-TESTS:
	@list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set_logs=; if test "X$(TEST_LOGS)" = X.log; then		\
	  set_logs=TEST_LOGS=;						\
	fi;								\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) $$set_logs

.log.html:
	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
	for r2h in $$list; do						\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@.tmp
	@mv $@.tmp $@

# Be sure to run check first, and then to convert the result.
# Beware of concurrent executions.  Run "check" not "check-TESTS", as
# check-SCRIPTS and other dependencies are rebuilt by the former only.
# And expect check to fail.
check-html:
	@if $(MAKE) $(AM_MAKEFLAGS) check; then			\
	  rv=0; else rv=$$?;					\
	fi;							\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) || exit 4;	\
	exit $$rv
recheck recheck-html:
	@target=`echo $@ | sed 's,^re,,'`;				\
	list='$(TEST_LOGS)';						\
	list=`for f in $$list; do					\
	        test -f $$f || continue;				\
	        if read line < $$f; then				\
	          case $$line in FAIL*|XPASS*) echo $$f;; esac;		\
	        else echo $$f; fi;					\
	      done | tr '\012\015' '  '`;				\
	$(MAKE) $(AM_MAKEFLAGS) $$target AM_MAKEFLAGS='$(AM_MAKEFLAGS) TEST_LOGS="'"$$list"'"'
.sh.log:
	@p='$<'; $(am__check_pre) $(SH_LOG_COMPILE) "$$tst" $(am__check_post)
@am__EXEEXT_TRUE@.sh$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; $(am__check_pre) $(SH_LOG_COMPILE) "$$tst" $(am__check_post)

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) $(HEADERS) \
		config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(library_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
	-test -z "$(TEST_SUITE_HTML)" || rm -f $(TEST_SUITE_HTML)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bin/$(am__dirstamp)
	-rm -f jellyfish/$(DEPDIR)/$(am__dirstamp)
	-rm -f jellyfish/$(am__dirstamp)
	-rm -f unit_tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f unit_tests/$(am__dirstamp)
	-rm -f unit_tests/gtest/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f unit_tests/gtest/src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkLTLIBRARIES clean-checkPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf jellyfish/$(DEPDIR) unit_tests/$(DEPDIR) unit_tests/gtest/src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-library_includeHEADERS install-man \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf jellyfish/$(DEPDIR) unit_tests/$(DEPDIR) unit_tests/gtest/src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-library_includeHEADERS uninstall-man \
	uninstall-pkgconfigDATA

uninstall-man: uninstall-man1

.MAKE: all check-am check-html install-am install-strip recheck \
	recheck-html

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	check-html clean clean-binPROGRAMS clean-checkLTLIBRARIES \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local ctags dist dist-all dist-bzip2 \
	dist-gzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES \
	install-library_includeHEADERS install-man install-man1 \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck recheck-html \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-library_includeHEADERS \
	uninstall-man uninstall-man1 uninstall-pkgconfigDATA

clean-local: clean-local-check
.PHONY: clean-local-check
clean-local-check:
	-cd tests; rm -f seq10m* seq1m* *_0 *_1 *_2 *_S *.md5sum *.histo *.stats *.timing *.query *.dump *.fa

tests/serial_hashing.log: tests/generate_sequence.log
tests/parallel_hashing.log: tests/generate_sequence.log
tests/serial_direct_indexing.log: tests/generate_sequence.log
tests/parallel_direct_indexing.log: tests/generate_sequence.log
tests/parallel_fastq_direct_indexing.log: tests/generate_fastq_sequence.log
tests/multi_file.log: tests/generate_sequence.log
tests/raw_hash.log: tests/generate_sequence.log
tests/from_stream.log: tests/generate_sequence.log
tests/parallel_fastq_hashing.log: tests/generate_fastq_sequence.log
tests/parallel_fastq_sequence_hashing.log: tests/generate_fastq_sequence.log
tests/multi_file_fastq.log: tests/generate_fastq_sequence.log
tests/from_stream_fastq.log: tests/generate_fastq_sequence.log
tests/merge.log: tests/generate_fastq_sequence.log
tests/min_qual.log: tests/generate_fastq_sequence.log
tests/parsers.log: tests/generate_sequence.log

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
